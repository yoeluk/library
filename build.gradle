buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
}

plugins {
    id("com.github.johnrengelman.shadow") version "7.1.1"
    id("io.micronaut.application") version '3.3.1'
    id "com.diffplug.spotless" version "6.2.2"
    id "idea"
}

version = "1.0.0"
group = "example.micronaut"

repositories {
    mavenLocal()
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.toVersion('17')
    targetCompatibility = JavaVersion.toVersion('17')
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("example.micronaut.*")
    }
}

dependencies {
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut.security:micronaut-security")
    implementation("io.micronaut.security:micronaut-security-oauth2")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.swagger.core.v3:swagger-annotations:2.2.0")
    runtimeOnly("ch.qos.logback:logback-classic")

    // persistence
    implementation 'mysql:mysql-connector-java:8.0.29'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")

    implementation("io.micronaut.flyway:micronaut-flyway")
    runtimeOnly("org.flywaydb:flyway-mysql")
}

application {
    mainClass.set("example.micronaut.Application")
}

graalvmNative.toolchainDetection = false
